typeof(x)
1:5
v <- vector("double", 10)
seq(.1, .24, .01)
clc
clear
packageName()
null
whos
data()
x <- 1 + 1i
y <- 1 - 1i
x * y
a <- "cat"
str(a)
ls
ls()
getwd
getwd()
ls
list()
getwd()
setwd("/Users/JIANCHEN/R")
2*2
source('~/R/play.R')
2*2
a<-2
a<-"2"
a<-@
a<- @
a<- 2
sqrt(4)
sqrt(5)
log(10)
log(e)
log(10)
log(11)
log(1)
sqrt(1:10)
mean(1:10)
for (i in 1:3)
{
print(i)
}
rep(4,4)
help(rep)
c(1 2 3)
c(1, 2, 3)
b = c(1, 2, 3)
b = c("1", "2", "3")
b = c(1, 2, 3)
help(mean)
rep(1:10, times = 4)
rep(1:10, each = 4)
?rep
rep(1:4,c(2,2,2,2))
rep(1:4,c(2,1,1,2))
rep(1:4,c(2,2,2,2),len=2)
rep(1:4,times=4,len=2)
rep(1:4,times=4,each=2)
?mean
?std
?sd
beep
?read.csv
trees
?head
head(trees)
summary(trees)
str(trees)
tail(trees)
summary(trees)
a <- summary(trees)
a
a.Girth
list(a)
a.
a
a.table
?table
d <- 1:10
d[d>5]
d>5
?rep
seq(1 10)
seq(1,10)
seq(1 10)
seq(1,10)
list(a=c(1,2),b="hi",c=3i)
mm <- list(a=c(1,2),b="hi",c=3i)
mm$a
mm.a
a$Girth
a
a$Min
array(1:10,2)
array(1:10,c(2,2,2)
)
array(1:10,c(2,2))
class(a)
class(d)
?as.numeric
as.numeric(c("2","3"))
pets = c("cat", "dog", "fish")
pets == "cat"
pets(pets %in% c("cat","dog"))
pets = c("cat", "dog", "fish")
pets == "cat"
pets(pets %in% c("cat","dog"))
pets[pets %in% c("cat","dog")]
pets[pets %in% c("cat","dog")]
pets(1)
clc
clear
rep("alpha", 4)
rep("alpha", 40)
?matrix
help(matrix)
e <- matrix(1:4, nrow = 2)
matrix(1:4, nrow = 2)
matrix(1:4, nrow = 2, byrow=TRUE)
e <- matrix(1:4, nrow = 2, byrow=TRUE)
e[1,2]
e[2,2]
e[,2]
e <- matrix(1:4, nrow = 2, byrow=TRUE)
e
e[,2]
e[2,]
trees[1,1]
trees
head(trees)
trees[,"Height"]
trees[,c("Volumn", "Height")]
trees[,c("Volume", "Height")]
trees$Height
trees[,]
trees[trees$Height>70]
trees[trees$Height>70,]
trees[,trees$Height>70]
trees[ ,trees$Height>70]
trees[trees$Height>70,2]
trees[trees$Height>70,3]
trees[trees$Height>70,3] trees[trees$Height>70,"Volume"]
trees[trees$Height>70,"Volume"]
a <- c(1, 4, 6, 10, 23, 100, 3, 4, 6, 1)
min(a)
max(a)
b <- c(1, 2, 3, 4, 0, 10)
which.min(b)
which.max(b)
b[which.min(b)]
iris
head(iris)
iris[, 'Sepal.Width']
iris[, 2]
iris[iris$Sepal.Length > 2, ]
max(iris$Petal.Length)
which.max(iris$Sepal.Length)
iris$Species[which.max(iris$Sepal.Length)]
iris$Species[which.max(iris$Sepal.Length)]
iris$Species=="setosa"
which.max(iris$Sepal.Length[iris$Species=="setosa"])
max(iris$Sepal.Length[iris$Species=="setosa"])
iris$Sepal.Length[iris$Species=="setosa"]
max(iris$Petal.Length[iris$Species=="setosa"])
iris$Petal.Length
which.max(iris$Petal.Length)
iris[iris$Sepal.Length > 2, ]
iris$Species[which.min(iris$Sepal.Length)]
which.min(iris$Sepal.Length)
iris$Species[14]
iris$Species(14)
iris$Species[14]
iris$Sepal.Width[which.max(iris$Petal.Length)]
iris$Sepal.Length>5
iris$Sepal.Length>5==TRUE
sum(iris$Sepal.Length>5)
sum(iris$Species=="setosa")
sum(iris$Species=="virginica")
sum(iris$Species=="versicolor")
sum?&&
?&&
?and
sum(iris$Species=="setosa"&&iris$Sepal.Length>5)
sum(iris$Species=="versicolor"&&iris$Sepal.Length>5)
sum(iris$Species=="virginica"&&iris$Sepal.Length>5)
iris[, 'Sepal.Length'] > 5
iris$Petal.Length[iris$Species=="setosa"]
mean(iris$Petal.Length[iris$Species=="setosa"])>mean(iris$Petal.Length[iris$Species=="versicolor"])
iris[iris$Species == 'versicolor', 'Petal.Length']
iris
iris[iris$Species == 'setosa',]
sum(iris[iris$Species == 'setosa',])
mean(iris[iris$Species == 'setosa',1:3])
iris[iris$Species == 'setosa',1:3]
mean(iris[iris$Species == 'setosa',1:3])
?mean
mean(as.numeric(iris[iris$Species == 'setosa',1:3]))
mean(iris[iris$Species == 'setosa',1])
mean(iris[iris$Species == 'setosa'])
mean(iris[iris$Species == 'setosa',1:3])
colmeans(iris[iris$Species == 'setosa',1:3])
?colMeans
colMeans(iris[iris$Species == 'setosa',1:3])
sum(iris[iris$Species == 'setosa',1:3])
apply(iris[iris$Species == 'setosa',1:3],2,mean)
mean(colMeans(iris[iris$Species == 'setosa',1:3]))
which.max(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'setosa',1:3])))
which.max(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'setosa',1:3]))), mean(colMeans(iris[iris$Species == 'setosa',1:3])))
which.max(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'setosa',1:3])))
which.max(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'versicolor',1:3])), mean(colMeans(iris[iris$Species == 'virginica',1:3])))
mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'versicolor',1:3])), mean(colMeans(iris[iris$Species == 'virginica',1:3]))
c(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'versicolor',1:3])), mean(colMeans(iris[iris$Species == 'virginica',1:3])))
which.max(c(mean(colMeans(iris[iris$Species == 'setosa',1:3])), mean(colMeans(iris[iris$Species == 'versicolor',1:3])), mean(colMeans(iris[iris$Species == 'virginica',1:3]))))
?sd
sd(iris$Sepal.Width)
sd(iris[iris$Species=="setosa", iris$Sepal.Width)
sd(iris[iris$Species=="setosa", iris$Sepal.Width))
sd(iris[iris$Species=="setosa", iris$Sepal.Width])
sd(iris[iris$Species=="setosa", ])
sd(iris$Sepal.Width[iris$Species=="setosa", ])
iris$Species=="setosa"
sd(iris$Sepal.Width[iris$Species=="setosa"])
sd(iris$Sepal.Width[iris$Species=="virginica"])
sd(iris$Sepal.Width[iris$Species=="sersicolor"])
sd(iris$Sepal.Width[iris$Species=="versicolor"])
sd(iris$Sepal.Width)
min(iris$Petal.Length[iris$Species=="setosa"])
min(iris$Petal.Length[iris$Species=="verginica"]) > min(iris$Petal.Length[iris$Species=="versicolor"])
iris$Petal.Length[iris$Species=="versicolor"]
min(iris$Petal.Length[iris$Species=="versicolor"])
min(iris$Petal.Length[iris$Species=="verginica"])
min(iris$Petal.Length[iris$Species=="virginica"]) > min(iris$Petal.Length[iris$Species=="versicolor"])
mean(iris$Petal.Length[iris$Species=="virginica"]) > mean(iris$Petal.Length[iris$Species=="versicolor"])
min(iris$Petal.Length[iris$Species=="virginica"]) > min(iris$Petal.Length[iris$Species=="versicolor"])
min(iris$Petal.Length[iris$Species=="versicolor" | iris$Species=="virginica"] )
iris$Petal.Length[iris$Species=="versicolor" | iris$Species=="virginica"]
which.min(iris$Petal.Length[iris$Species=="versicolor" | iris$Species=="virginica"] )
iris$Species[which.min(iris$Petal.Length[iris$Species=="versicolor" | iris$Species=="virginica"] )]
iris$Species[iris$Species=="versicolor" | iris$Species=="virginica"][which.min(iris$Petal.Length[iris$Species=="versicolor" | iris$Species=="virginica"] )]
library(ggplot2)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
getwd()
setwd("Users/JIANCHEN/Dropbox/Chen_PhD/LaserCalibraton")
getwd()
setwd("Users/JIANCHEN/Dropbox/Chen_PhD/LaserCalibraton")
setwd("Users/JIANCHEN/")
setwd("Dropbox/Chen_PhD/LaserCalibraton")
install.packages("pdftools")
?pdftools
require(pdftools)
?pdftools
pwd
getwd
getwd()
setwd(/Users/JIANCHEN/GitHub)
setwd("/Users/JIANCHEN/GitHub/Reference_Relationship")
dir
dir()
pdf_info("2009 - Selecting and perceiving multiple visual objects.pdf")
pdf_info("/Users/JIANCHEN/GitHub/Reference_Relationship")
pdf_info("/Users/JIANCHEN/GitHub/Reference_Relationship/2009 - Selecting and perceiving multiple visual objects.pdf")
library(pdftools)
download.file("http://arxiv.org/pdf/1403.2805.pdf", "1403.2805.pdf", mode = "wb")
txt <- pdf_text("1403.2805.pdf")
# first page text
cat(txt[1])
# second page text
cat(txt[2])
library(pdftools)
download.file("http://arxiv.org/pdf/1403.2805.pdf", "1403.2805.pdf", mode = "wb")
txt <- pdf_text("1403.2805.pdf")
txt <- pdf_text("1403.2805.pdf")
cat(txt[1])
cat(txt[2])
info <- pdf_info("1403.2805.pdf")
info
fontspdf <- pdf_fonts("1403.2805.pdf")
fontspdf
attachments <- pdf_attachments("1403.2805.pdf")
attachments
toc <- pdf_toc("1403.2805.pdf")
toc
jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
toc
a <- jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
a
setwd("/Users/JIANCHEN/GitHub/Reference_Relationship")
install.packages("pdftools")
install.packages("pdftools")
require(pdftools)
library(pdftools)
txt <- pdf_text("1403.2805.pdf")
txt
info
info <- pdf_info("1403.2805.pdf")
info
toc <- pdf_toc("1403.2805.pdf")
a <- jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
a
install_github('rmetadata', 'ropensci') # uncomment to install
install.github('rmetadata', 'ropensci') # uncomment to install
install.packages('rmetadata')
install_github('rmetadata', 'ropensci') # uncomment to install
install.packages("dplyr") # The devtools package provides install_github() that enables installing packages from GitHub.
install_github('rmetadata', 'ropensci') # uncomment to install
library("dplyr")
install_github('rmetadata', 'ropensci') # uncomment to install
library(devtools)
install_github('rmetadata', 'ropensci') # uncomment to install
library(rmetadata)
count_identifiers("datacite")
print(crossref_citation("10.3998/3336451.0009.101"), style = "Bibtex")
library(rmetadata)
count_identifiers("datacite")
print(crossref_citation("10.3998/3336451.0009.101"), style = "Bibtex")
x=system(‘ruby -e “puts 1+1″‘, intern=TRUE)
x=system('ruby -e "puts 1+1"', intern=TRUE)
x
x=system('ruby -e "ls"', intern=TRUE)
x=system('ruby -e "pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/1403.2805.pdf"', intern=TRUE)
x=system('ruby pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/1403.2805.pdf', intern=TRUE)
x=system('ruby "pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/1403.2805.pdf"', intern=TRUE)
x
txt <- pdf_text("1403.2805.pdf")
txt
txt <- pdf_text("1403.2805.pdf")
txt
info <- pdf_info("1403.2805.pdf")
info
fontspdf <- pdf_fonts("1403.2805.pdf")
attachments <- pdf_attachments("1403.2805.pdf")
attachments
toc <- pdf_toc("1403.2805.pdf")
a <- jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
a
toc <- pdf_toc("1403.2805.pdf")
a <- jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
a
txt <- pdf_text("1403.2805.pdf")
txt
info
x = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/1403.2805.pdf", intern=TRUE)
x
system("sudo gem pdf-extract", intern=TRUE)
system("gem pdf-extract", intern=TRUE)
ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/1403.2805.pdf", intern=TRUE)
ref
ref(1)
ref[1]
ref[2]
ref[3]
ref[10]
ref[20]
ref[21]
ref[22]
ref[30]
length(ref)
ref
paper$ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper <- []
paper$ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
names(ourlist) <- c('a', 'b', 'c', 'd')
ourlist <- list('alpha', 'beta', 2, TRUE)
class(ourlist)
ourlist
paper <- data.frame()
paper$ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
?data.frame
paper <- data.frame(title = character(),
ref = character(),
stringsAsFactors = FALSE)
paper$ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
names(alpha) <- c('a', 'b', 'c', 'd', 'e')
alpha <- c(1, 2, 3, 4, 5)
alpha[2]
alpha[c(FALSE, TRUE, FALSE, FALSE, FALSE)]
names(alpha) <- c('a', 'b', 'c', 'd', 'e')
alpha
alpha[c(FALSE, TRUE, FALSE, FALSE, FALSE)]
alpha[2]
alpha <- c(1, 2, 3, 4, 5)
alpha <- c(1, 2, 3, 4, 5)
alpha[2]
alpha[c(FALSE, TRUE, FALSE, FALSE, FALSE)]
ourlist <- list('alpha', 'beta', 2, TRUE)
class(ourlist)
ourlist
ourlist[1:3]
ourlist[[3]]
class(ourlist[[3]])
ourlist[3]
names(ourlist) <- c('a', 'b', 'c', 'd')
ourlist
paper <- list()
names(paper) <- c('title','ref')
paper <- list()
paper$ref = system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper
paper$ref[22]
paper$ref <- system("pdf-extract extract --titles --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper$ref[22]
paper$ref
paper <- list()
paper$ref <- system("pdf-extract extract --titles --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper$ref
paper$title <- system("pdf-extract extract --titles /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper$title
paper$ref <- system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf >1403.2805.txt", intern=TRUE)
paper$title <- system("pdf-extract extract --titles /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf >>1403.2805.txt", intern=TRUE)
paper$title
paper$title
paper$ref
paper$ref <- system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf >1403.2805.txt", intern=TRUE)
paper$ref
paper$ref <- system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper$ref{1}
paper$ref[1]
paper[1]$ref <- system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper[1]$ref
paper[2]$title <- system("pdf-extract extract --titles /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper[2]$title
paper
paper[2]$title <- system("pdf-extract extract-bib --resolved_references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper
paper[2]$ref
paper
paper[2]$title
paper[2]$title
paper[2]$title <- system("pdf-extract extract --titles /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
for (i in 1:5){
paper[i]$ref <- system("pdf-extract extract --references /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper[i]$ref
paper[i]$title <- system("pdf-extract extract --titles /Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/1403.2805.pdf", intern=TRUE)
paper[i]$title
}
fileindex <- c(pdfpath,pdfname,'.pdf')
pdfpath <- c("/Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/")
pdfname <- c("1403.2805")
fileindex <- c(pdfpath,pdfname,'.pdf')
fileindex
fileindex <- paste(pdfpath,pdfname,'.pdf')
fileindex
?paste
fileindex <- paste(pdfpath,pdfname,'.pdf',sep = "")
fileindex
systemcmd_tit <- paste("pdf-extract extract --titles ")
systemcmd_ref <- paste("pdf-extract extract --references ",fileindex)
systemcmd_tit <- paste("pdf-extract extract --titles ",fileindex)
systemcmd_ref
paper[i]$ref <- system(systemcmd_ref, intern=TRUE)
paper[i]$ref <- system(systemcmd_ref, intern=TRUE)
pdfpath <- c("/Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/")
pdfname <- c("1403.2805")
paper <- list()
fileindex <- paste(pdfpath,pdfname,'.pdf',sep = "")
systemcmd_ref <- paste("pdf-extract extract --references ",fileindex)
systemcmd_tit <- paste("pdf-extract extract --titles ",fileindex)
paper[i]$ref <- system(systemcmd_ref, intern=TRUE)
system(systemcmd_ref, intern=TRUE)
fileindex[i] <- paste(pdfpath,pdfname,'.pdf',sep = "")
i=1
fileindex[i] <- paste(pdfpath,pdfname,'.pdf',sep = "")
systemcmd_ref[i] <- paste("pdf-extract extract --references ",fileindex)
systemcmd_tit[i] <- paste("pdf-extract extract --titles ",fileindex)
fileindex
fileindex[1]
fileindex[2]
fileindex[3]
length(pdfname)
pdfname <- c("1403.2805","1","2","3","4")
length(pdfname)
pdfpath <- c("/Users/JIANCHEN/GitHub/Reference_Relationship/pdfs/")
pdfname <- c("1403.2805","1","2","3","4")
paper <- list()
for (i in 1:length(pdfname)){
fileindex[i] <- paste(pdfpath,pdfname,'.pdf',sep = "")
systemcmd_ref[i] <- paste("pdf-extract extract --references ",fileindex[i])
systemcmd_tit[i] <- paste("pdf-extract extract --titles ",fileindex[i])
paper[i]$ref <- system(systemcmd_ref[i], intern=TRUE)
paper[i]$ref
paper[i]$title <- system(systemcmd_tit[i], intern=TRUE)
paper[i]$title
}
pdf
paper
paper <- list()
fileindex
pdfname[2]
pdfname <- c("1403.2805","1","2","3","4")
paper <- list()
for (i in 1:length(pdfname)){
fileindex[i] <- paste(pdfpath,pdfname[i],'.pdf',sep = "")
systemcmd_ref[i] <- paste("pdf-extract extract --references ",fileindex[i])
systemcmd_tit[i] <- paste("pdf-extract extract --titles ",fileindex[i])
paper[i]$ref <- system(systemcmd_ref[i], intern=TRUE)  # get reference using system command and pdfextract tool
paper[i]$title <- system(systemcmd_tit[i], intern=TRUE) # get title using system command and pdfextract tool
print
}
paper[1]$ref <- system(systemcmd_ref[1], intern=TRUE)
